"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[975],{106:(e,n,s)=>{s.r(n),s.d(n,{default:()=>f});var c=s(411),a=s(562),t=s(784),r=s(87),i=s(656),o=s(185),l=s(4),d=s(592),u=s(322);const f=({faceScanProcessor:e,sessionData:n,session_id:s})=>{const{t:f,i18n:p}=(0,r.$G)(),[_,g]=t.useState(!0),h=(0,o.I0)(),{theme:x}=(0,l.F)(),y=(0,o.v9)(i.dn);(0,t.useEffect)((()=>{console.log("Face scan processor",s),e&&n&&x&&(async()=>{try{d.Y.info("Starting face scan");const{productionKeyText:a,deviceKeyIdentifier:t,publicFaceScanEncryptionKey:r}=n,i=y&&""!==y?y:n.sessionToken;var c;e.getIsReady()||(await e.initialize(a,t,r),e.setLanguageStrings(x,null==(c=p.getDataByLanguage(p.language))?void 0:c.default)),e.setOnCallbackComplete(j),e.processor(s,i),m()}catch(e){d.Y.error("Error starting face scan",e),h((0,i.sT)(f("frontend_face_incomplete_error")))}})()}),[e,n,x]);const j=async e=>{null!=e&&e.isCompletelyDone||(d.Y.error("Face scan incomplete"),h((0,i.sT)(f("frontend_face_incomplete_error"))))},m=()=>{setTimeout((()=>{g(!1)}),2e3)};return(0,u.jsxs)(c.Ar,{children:[(0,u.jsx)(c.Dx,{children:(0,u.jsx)("div",{})}),(0,u.jsx)(c.VY,{children:_&&(0,u.jsx)(a.QE,{children:f("sdk_mobile_action_description")+"FacePrint"})&&(0,u.jsx)(a.QE,{children:f("app_face_info_subtitle")})}),(0,u.jsx)(c.aU,{children:(0,u.jsx)("div",{})})]})}}}]);